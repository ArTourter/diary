#!/bin/bash
## title          :diary
## description    :Script to manage diary annotations of different projects
##                 or personal notes. It allows to search sentences in all the
##                 diaries, visualize in a web-browser, and maintain a control
##                 version.
## author         :Miquel Perello Nieto
## date           :20150507
## version        :0.5
## usage          :diary nameofthediary
## notes          :Install Vim or modify the text editor
## bash_version   :4.1.5(1)-release

version="diary 0.5
Copyright (C) 2015
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Written by Miquel Perello Nieto."

usage="Usage: $0 [OPTION]... [DIARY_NAME]
Opens todays page of the DIARY_NAME diary or performs any of the specified
options.

    OPTIONs

     -h, --help       Show the help
     -v, --version    Show the actual version information
     -ls              Show the name of all the diaries
     -lsl             List the name of all the diaries
     -e, --explore    Open a web-browser with the content of the specified diary
     -s, --search     Searches the following sentence in the specified diary
                      (or in all the diaries if the diary name is ommited)
     -push            Push all the changes to a repository
     -pull            Pull all the changes from a repository

Report bugs to <bugs-diary@perellonieto.com>."

#=============================
# CONFIGURATION VARIABLES
#
DIARY_PATH="${HOME}/diary"
EDITOR="vim + "
EXPLORER="sensible-browser"

ADD="git add *"
COMMIT="git commit"
PULL="git pull"
PUSH="git push"

FORMAT=`date +"%Y_%m_%d"`
VALID_PROJECT_NAME='^0-9a-zA-Z+$'
EXTENSION="md"
TEMP_FILE="._tmp_file_markdown.html"

CSS_STYLE='
<style type="text/css">
pre {
    background-color: lightgray;
    margin-left: 2em;
}
</style>
'

HTML_HEADER="<html><head>${CSS_STYLE}</head><body>"

HTML_FOOTER='</body></html>'

#=============================
# AUXILIAR FUNCTIONS
#

# TODO: find correct regular expresion
# for some reason I do not get + and ? to work
function validate_project_name() {
    if [[ $1 =~ [$VALID_PROJECT_NAME] ]]; then
        return 1
    elif [[ $1 == '' ]]; then
        return 1
    fi
    return 0
}

function explore() {
    diary=$1
    cd $diary
    rm "$TEMP_FILE"
    echo ${HTML_HEADER} > ${TEMP_FILE}

    for f in `ls ./*."${EXTENSION}"`
    do
        echo "Extracting file $f"
        echo "<h1>$f</h1>" >> "$TEMP_FILE"
        markdown $f >> "$TEMP_FILE"
    done

    echo ${HTML_FOOTER} >> ${TEMP_FILE}

    $EXPLORER "${TEMP_FILE}"
}

#=============================
# MAIN
#

# First time using diary
if ! [ -d "${DIARY_PATH}" ]; then
    mkdir "${DIARY_PATH}"
fi

# Go to diaries path
cd ${DIARY_PATH}

while [[ $# -gt 0 ]]; do
    opt="$1"
    shift
    case "$opt" in
    -h|--help) printf '%s\n' "$usage" || exit 2; exit;;
    -v|--version) printf '%s\n' "$version" || exit 2; exit;;
    -ls) ls || exit 2; exit;;
    -lsl) ls -l || exit 2; exit;;
    -s|--search) search_sentence=$1; shift;;
    -e|--explore) explore $1; exit;;
    -pull) $PULL || exit 2; exit;;
    -push) $ADD; $COMMIT; $PUSH; exit;;
    *)
      if [[ $# -eq 0 ]]; then
          diary=${opt}
      else
          printf '%s\n' "$usage" || exit 2; exit;
      fi
      ;;
    esac
done

if ! [[ -z "$search_sentence" ]]; then
    if ! validate_project_name $diary; then
        grep -r "${search_sentence}" ./*/*.${EXTENSION}
    else
        grep -r "${search_sentence}" ${diary}/*.${EXTENSION}
    fi
    exit 0
fi

if ! validate_project_name $diary; then
    echo "Project name can only contain :${VALID_PROJECT_NAME}"
    exit 0
fi

# If the diary is new, create it
if ! [ -d "$diary" ]; then
    mkdir "${diary}"
fi

cd $diary

#if [[ -z "$DAY" ]]; then
#    FORMAT=$DAY
#fi

FILENAME=${diary}\_${FORMAT}.${EXTENSION}

${EDITOR}  ${FILENAME}
